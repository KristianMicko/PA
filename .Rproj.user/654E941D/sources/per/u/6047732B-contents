getwd()
transakcie = read.csv("BreadBasket_DMS.csv")
Bread = summary(droplevels(transakcie[which(transakcie$Item=="Bread"),4]))
Cake = summary(droplevels(transakcie[which(transakcie$Item=="Cake"),4]))
Coffee= summary(droplevels(transakcie[which(transakcie$Item=="Coffee"),4]))
Medialuna= summary(droplevels(transakcie[which(transakcie$Item=="Medialuna"),4]))
NONE= summary(droplevels(transakcie[which(transakcie$Item=="NONE"),4]))
Pastry= summary(droplevels(transakcie[which(transakcie$Item=="Pastry"),4]))
Sandwich= summary(droplevels(transakcie[which(transakcie$Item=="Sandwich"),4]))
Tea= summary(droplevels(transakcie[which(transakcie$Item=="Tea"),4]))

Nesledovane = sum(pomocne[pomocne$B==FALSE,1])
sum(pomocne[pomocne$B==FALSE,1])
for (i in 1:7008) {
  Nesledovane[i]= "Ostatne"
}
Nesledovane = as.factor(Nesledovane)

Nesledovane = summary(Nesledovane) 

A = summary(transakcie$Item)
B = as.logical(summary(transakcie$Item)> 590)
C = levels(transakcie$Item)
pomocne = data.frame(A,B,C)
#summary(pomocne)

pomocne[which(pomocne$B == TRUE),3]
sledovane = pomocne[which(pomocne$B == TRUE),3]
sledovane = droplevels(sledovane)
#sledovane
#sledovane = c(Bread,Cake,Coffee,Medialuna,NONE,Pastry,Sandwich,Tea)
sledovane = c(Bread,Cake,Coffee,Medialuna,NONE,Pastry,Sandwich,Tea,Nesledovane)
View(sledovane)
#sledovane
pct = round(sledovane/sum(sledovane)*100)
sledovane_1 = data.frame(A = c("Bread","Cake","Coffee","Medialuna","NONE","Pastry","Sandwich","Tea","Ostatne"), B=sledovane, C=pct)
j = paste(sledovane_1$A, sledovane_1$C, sep = " ")
j = paste(j, "%", sep = "")
pie(sledovane_1$B, labels = j, col = rainbow(length(sledovane_1$B)))
barplot(sledovane, col = rainbow(length(sledovane)))
transakcie$Date
installed.packages()
install.packages("lubridate")
install.packages("yaml")
library(lubridate)
install.packages("tidyverse")
transakcie_1 = transakcie
summary(transakcie$Date)
levels(transakcie$Date)
Dni = levels(transakcie$Date)
day(as.POSIXlt(Dni, format="%Y-%m-%d"))
Dni
index = c(7 , rep_len(1:7,158))
index
Datumy = data.frame(Dni,index)
names(Datumy) = c("Date","Ind")
spojeneTabulky = merge(transakcie_1,Datumy, by="Date")
View(spojeneTabulky)
index_1 = 1:7
Dni = c("Pondelok", "Utorok","Streda","Stvrtok","Piatok","Sobota","Nedela")
pomocna_1 = data.frame(index_1,Dni)
names(pomocna_1) = c("Ind", "Dni")
spojeneTabulky = merge(spojeneTabulky, pomocna_1, by="Ind")
spojeneTabulky_1 = spojeneTabulky[,c(2,3,4,5,6,1)]
spojeneTabulky_1 = spojeneTabulky_1[order(spojeneTabulky_1$Date),]
summary(spojeneTabulky_1$Dni)
spojeneTabulky_1$Dni = relevel(spojeneTabulky_1$Dni, "Nedela")
spojeneTabulky_1$Dni = relevel(spojeneTabulky_1$Dni, "Sobota")
spojeneTabulky_1$Dni = relevel(spojeneTabulky_1$Dni, "Piatok")
spojeneTabulky_1$Dni = relevel(spojeneTabulky_1$Dni, "Stvrtok")
spojeneTabulky_1$Dni = relevel(spojeneTabulky_1$Dni, "Streda")
spojeneTabulky_1$Dni = relevel(spojeneTabulky_1$Dni, "Utorok")
spojeneTabulky_1$Dni = relevel(spojeneTabulky_1$Dni, "Pondelok")

Dni_2 = summary(spojeneTabulky_1$Dni)
barplot(Dni_2,col = rainbow(length(Dni_2)))


library(clusterSim)
library(party)

levels(spojeneTabulky_1$Item)
day(as.POSIXlt(Dni, format="%Y-%m-%d"))

Hodiny = spojeneTabulky_1$Time
View(Hodiny)
index_casu = 1:21293
Cas = data.frame(Hodiny, index_casu)
View(hms(Hodiny))
Hodiny_1 = data.frame(hms(Hodiny)@hour,hms(Hodiny)@minute, index_casu)
View(Hodiny_1)
spojeneTabulky_1$index_casu = 1:21293
spojeneTabulky_2 = merge(spojeneTabulky_1, Hodiny_1, by = "index_casu")
spojeneTabulky_1 = spojeneTabulky_2[,c(2:9)]
corrgram(spojeneTabulky_1)
opilun = data.frame(table(spojeneTabulky_1$hms.Hodiny..hour,spojeneTabulky_1$Dni))
View(opilun)
library(lattice)
xyplot(Freq~ Var1| Var2, data=opilun)
table(spojeneTabulky_1$Item,spojeneTabulky_1$hms.Hodiny..hour)
najpredavanejsie_casy = table(spojeneTabulky_1$Item,spojeneTabulky_1$hms.Hodiny..hour)
najpredavanejsie_casy = data.frame(najpredavanejsie_casy)
plot(najpredavanejsie_casy$Var1,najpredavanejsie_casy$Freq)
paste(najpredavanejsie_casy$Var1, najpredavanejsie_casy$Freq)

levels(najpredavanejsie_casy$Var2)
najpredavanejsie_casy[which(najpredavanejsie_casy$Var2 == "7"),c(1,3)]

najpredavanejsie_casy[which(najpredavanejsie_casy$Freq>0),1:3]

G = najpredavanejsie_casy[which(najpredavanejsie_casy$Freq>33),1:3]
G$Var1 = droplevels(G$Var1)
levels(G$Var1)
plot(x =najpredavanejsie_casy$Var2,y = najpredavanejsie_casy$Freq)
xyplot(Freq~ Var2| Var1, data=G)
mean(G$Freq) 
set.seed(100)
roz = sample(2, nrow(najpredavanejsie_casy),replace = TRUE, prob = c(0.7,0.3))
trenovacie = najpredavanejsie_casy[roz == 1, ]
testovacie = najpredavanejsie_casy[roz == 2, ]


zavislot = Var1~Var2 + Freq
najpredavanejsie_casy_ctree = ctree(zavislot ,data =trenovacie)